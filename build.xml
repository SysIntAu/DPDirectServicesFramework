<?xml version="1.0" encoding="UTF-8"?>
<!-- *******************************************************************
	**
	** NAME
	** build.xml
	**
	** PURPOSE
	** This ANT script calls the dpdirect buildscript 'dp-build'.
	**
	** PARAMETERS
	** release.build.dir    == Contains the built deployment artifacts, this will be a temporary working directory
	**                == Default behaviour is to create a release dir in the deploy dir
	**
	** OPTIONAL PARMS
	** component.list == Comma delimeted list of components to build. Default is all
	**
	** EXAMPLES
	** ant   (builds to deploy/release)
	** ant -Drelease.build.dir=C:/TEMP/release
	**
	** MODIFICATIONS    DATE       	DETAILS
	** Tim Goodwill		2012.11.26	Initial script
	**
	******************************************************************** -->
<project name="build" default="package">
	
	<!-- === PROPERTIES ===================================================================================== -->
	
	<!-- Default locations -->
	<property name="project.dir"  location="${basedir}"/>
	<property name="release.dir"  location="${basedir}/target"/>
	<property name="release.build.dir"  location="${release.dir}/release"/>
	<property name="deploy.dir"  location="${basedir}/ant-deploy"/>
	<property name="release.zip.name"  value="release.zip"/>

	<!-- Default parameters -->
	<condition property="type" value="file">
		<isset property="file"/>
	</condition>
	<condition property="type" value="dir">
		<isset property="dir"/>
	</condition>
	<property name="type" value="all"/>
	
	<!-- === DEPLOY TARGETS ================================================================================= -->
	
	<!-- **********************************************************
		** target: release
		**
		** PURPOSE
		** This target is called to initiate the build. 
		** The target will parametize and package, then validate the package.
		****************************************************************** -->
	
	<target name="release" 
		description="Builds dpdirect deployable artifacts from source.
		** OPTIONAL PARAMETERS: release.build.dir  == Contains the built deployment artifacts, this will be a temporary working directory.  
		Default behaviour is to create a release dir in the deploy dir.
		** EXAMPLES: 'ant'  or  'ant -Drelease.build.dir=C:/TEMP/release'"
		depends="package">
		
		<!-- create deployable archive -->
		<zip destfile="${release.dir}/${release.zip.name}"
			basedir="${release.build.dir}"
			excludes="${release.zip.name}"/>

		
	</target>
	
	<target name="package" 
		description="Builds dpdirect deployable artifacts from source.
		** OPTIONAL PARAMETERS: release.build.dir  == Contains the built deployment artifacts, this will be a temporary working directory.  
		Default behaviour is to create a release dir in the deploy dir.
		** EXAMPLES: 'ant'  or  'ant -Drelease.build.dir=C:/TEMP/release'">
		<mkdir dir="${release.build.dir}"/>
		<delete includeemptydirs="true">
			<fileset dir="${release.build.dir}" includes="**/*"/>
		</delete>
		
		<!-- Call the component build.xml buildfiles to package dpdirect artifacts for deployment -->
		<subant target="package" inheritall="true" inheritrefs="true">
			<fileset dir="${basedir}.framework-common" includes="build.xml"/>
		</subant>
		<subant target="package" inheritall="true" inheritrefs="true">
			<fileset dir="${basedir}.framework-soa-esb" includes="build.xml"/>
		</subant>
		<subant target="package" inheritall="true" inheritrefs="true">
			<fileset dir="${basedir}.framework-rest-api" includes="build.xml"/>
		</subant>
		<subant target="package" inheritall="true" inheritrefs="true">
			<fileset dir="${basedir}.framework-gateway-router" includes="build.xml"/>
		</subant>
		
		<!-- copy the built packages to the target dir -->
		<copy todir="${release.build.dir}" overwrite="true">
			<fileset dir="${basedir}.framework-common/target/release" includes="**/*"/>
			<fileset dir="${basedir}.framework-soa-esb/target/release" includes="**/*"/>
			<fileset dir="${basedir}.framework-rest-api/target/release" includes="**/*"/>
			<fileset dir="${basedir}.framework-gateway-router/target/release" includes="**/*"/>
		</copy>
		
	</target>
	
	<target name="deploy" depends="package">
		<subant target="deploy" inheritall="true" inheritrefs="false" buildpath="${deploy.dir}/dp-deploy.xml">
			<fileset dir="${deploy.dir}" includes="dp-deploy.xml"/>
			<property name="basedir" value="${deploy.dir}"/>
			<property name="project.dir" value="${project.dir}"/>
		</subant>
	</target>
	
</project>

